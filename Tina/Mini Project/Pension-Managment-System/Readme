## Create project

This is spring boot project, here for adding the dependencies we are using the official website of Spring Initializr(https://start.spring.io).
After adding this we get Maven to load, now to build the project run 'mvn clean install' cmd and for running the application run 'mvn spring-boot:run'.
For performing the testing on application we use localhost:port number(8080/8081/8082 ,etc) either write this on browser or on POSTMAN.


# Build the project

mvn clean install

# Run application

mvn spring-boot:run

# Testing the application

using POSTMAN or BROWSER

# 1.Creating Applicant (Admin's operation)
POST
http://localhost:8082/create/applicant

Accept: application/json Content-type: application/json Body:

{
"id":1,
"name":"Tina",
"age":60,
"balance":109000,
"mobile":"9888995522",
"empStatus":"R",
"pensionStatus":"N",
"pensionMMYY":"0922",
"installment":1020
}

# 2.Editing Applicant details (Admin's operation)
POST

http://localhost:8082/edit/applicant
Accept: application/json Content-type: application/json Body:

{
"id":1,
"name":"Tina",
"age":60,
"balance":109000,
"mobile":"9888995522",
"empStatus":"R",
"pensionStatus":"N",
"pensionMMYY":"0922",
"installment":1020
}

# 3.Approve the pension application if empStatus is R, i.e., retired (Admin's operation)
POST
http://localhost:8082/approve/107

# 4.Issue Pensions for all Retired employees (Admin's operation)
POST
http://localhost:8082/issuePension


# 5.Load Pensions for all Active employees (Admin's operation)
POST
http://localhost:8082/loadPension

# 6. Check Balance (User's operation)
GET
http://localhost:8082/checkBalance/107

# 7. Check Status (User's operation)
GET
http://localhost:8082/checkStatus/107

# 8. Check Application Information (User's operation)
GET
http://localhost:8082/checkApplication/107

##
Extra operations for testing
Fetch All Applications GET
http://localhost:8082/get/applicants


##
Delete application DELETE

http://localhost:8082/delete/applicant/101